name: Promote staging → production (clone)

on:
  # 手動で実行（push/PRトリガは外す）
  workflow_dispatch:
    inputs:
      source:
        description: 'Source (e.g. <STAGING_SITE_ID>:live)'
        required: false
      target:
        description: 'Target (e.g. <PRODUCTION_SITE_ID>:live)'
        required: false

jobs:
  promote:
    runs-on: ubuntu-latest
    # （任意）本番承認ゲートを使うなら Environments で production を作成し Required reviewers を設定
    environment: production

    # ← secrets を env にマッピングしてから使う
    env:
      FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
      FIREBASE_TOKEN:          ${{ secrets.FIREBASE_TOKEN }}
      STAGING_SITE_ID:         ${{ secrets.STAGING_SITE_ID }}
      PRODUCTION_SITE_ID:      ${{ secrets.PRODUCTION_SITE_ID }}
      FIREBASE_PROJECT_ID:     ${{ secrets.FIREBASE_PROJECT_ID }}

    steps:
      - name: Install Firebase CLI
        run: npm i -g firebase-tools

      # SA があればそれで認証
      - name: Auth via Service Account
        if: ${{ env.FIREBASE_SERVICE_ACCOUNT != '' }}
        run: |
          echo "$FIREBASE_SERVICE_ACCOUNT" > "$RUNNER_TEMP/sa.json"
          echo "GOOGLE_APPLICATION_CREDENTIALS=$RUNNER_TEMP/sa.json" >> "$GITHUB_ENV"

      # SA が無ければ FIREBASE_TOKEN を使う
      - name: Auth via FIREBASE_TOKEN
        if: ${{ env.FIREBASE_SERVICE_ACCOUNT == '' && env.FIREBASE_TOKEN != '' }}
        run: echo "FIREBASE_TOKEN=$FIREBASE_TOKEN" >> "$GITHUB_ENV"

      - name: Set variables
        shell: bash
        run: |
          set -euo pipefail
          SRC="${{ github.event.inputs.source }}"
          TGT="${{ github.event.inputs.target }}"
          # 既定は <STAGING_SITE_ID>:live → <PRODUCTION_SITE_ID>:live
          if [ -z "${SRC}" ]; then SRC="${STAGING_SITE_ID}:live"; fi
          if [ -z "${TGT}" ]; then TGT="${PRODUCTION_SITE_ID}:live"; fi
          echo "SRC=$SRC" >> "$GITHUB_ENV"
          echo "TGT=$TGT" >> "$GITHUB_ENV"

      - name: Preflight checks
        shell: bash
        run: |
          set -euo pipefail
          err=0
          if [ -z "$FIREBASE_SERVICE_ACCOUNT" ] && [ -z "$FIREBASE_TOKEN" ]; then
            echo "::error title=Auth missing::Set FIREBASE_SERVICE_ACCOUNT or FIREBASE_TOKEN"
            err=1
          fi
          if [ -z "$STAGING_SITE_ID" ] || [ -z "$PRODUCTION_SITE_ID" ]; then
            echo "::error title=Site IDs missing::Set STAGING_SITE_ID and PRODUCTION_SITE_ID"
            err=1
          fi
          if [ "$err" -ne 0 ]; then exit 1; fi

      - name: Show current staging releases (sanity check)
        run: |
          if [ -n "$FIREBASE_PROJECT_ID" ]; then PROJ="--project $FIREBASE_PROJECT_ID"; fi
          firebase hosting:releases:list --site "$STAGING_SITE_ID" $PROJ --limit 5 || true

      - name: Clone staging live → production live
        run: |
          if [ -n "$FIREBASE_PROJECT_ID" ]; then PROJ="--project $FIREBASE_PROJECT_ID"; fi
          echo "Cloning: $SRC  →  $TGT"
          firebase hosting:clone "$SRC" "$TGT" $PROJ
